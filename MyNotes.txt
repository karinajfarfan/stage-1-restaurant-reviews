main objective: responsive - accessible - offline

1 - use flexbox displays for main css /*added*/
2 - map id api key
	two places: main js and index html

3 - load data for drop downs * all neighborhoods and all cuisines *

* live server or go to dbhelper files under js and change to 5500 for port -- or just use 


4 - media queries in css for all mobile devices

5 - add aria functionality, alt attributes for images

*use the audits in dev tools to see usage %  -- just need accessibility checked

6 - add cache for offline use

--------------------------------------------

Requirments :

#Make the provided site fully responsive. 
	All of the page elements should be usable and visible in any viewport, including desktop, tablet, and mobile displays. Images shouldn't overlap, and page elements should wrap when the viewport is too small to display them side by side. 

#Make the site accessible. 
	Using what you've learned about web accessibility, ensure that alt attributes are present and descriptive for images. Add screen-reader-only attributes when appropriate to add useful supplementary text. Use semantic markup where possible, and ARIA attributes when semantic markup is not feasible. 

#Cache the static site for offline use. 
	Using Cache API and Service Worker, Cache the data for the website so that any page (including images) that has been visited is accessible offline. 



-----------------------------------------

Offline first techniques
1. Deliver the pages headers and content from a cache on the device, then attempt to fetch updated content from the network
2. deliver the pages header form a cache, then attempt to fetch the content from the network

-------------------------------------

to run python webserver
 C:\Users\karin\AppData\Local\Programs\Python\Python36-32\python.exe -m http.server 8000

--------------------

changes:

IN restaurant.html

<header class="header-content">  >>>>>>>>>   <header class="header-grid">

aria-label="bread-crumb >>>>>>> instead of aria-label="Breadcrumb"

class="main-content" >>>>>>>>>> aria-label="main-grid"

<footer id="footer" class="footer-content">  >>>>>>>>>>>>>>>>>>> <footer id="footer" class="footer-grid">

IN index.html


IN restaurant_info.js

name.classList.add("review-name");
date.classList.add("review-date");
rating.classList.add("review-rating");
comments.classList.add("review-comments");